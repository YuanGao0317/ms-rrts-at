# docker compose -f docker-compose-monitoring.yaml up -d elasticsearch kibana metricbeat heartbeat apm-server
version: "3.9"
networks:
  elastic_net:
  volumes_net:
  services_net:


services:
  # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
  # ERROR: unexpected error while indexing monitoring document, primary shard is not active, failed to flush export bulks
  # CAUSED BY: Low disk space
  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    restart: always
    environment:
      ES_JAVA_OPTS: -Xmx1g -Xms1g
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      network.host: 0.0.0.0
      transport.host: 127.0.0.1
      http.host: 0.0.0.0
      xpack.security.enabled: "true"
      xpack.security.authc.api_key.enabled: "true"
      xpack.monitoring.collection.enabled: "true"
      xpack.security.enrollment.enabled: "true"
      xpack.security.authc.token.enabled: "true"
      #xpack.security.http.ssl.enabled: "true"
      ELASTIC_PASSWORD: ms_admin
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9300:9300
      - 9200:9200
    networks:
      - elastic_net

  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.13.2
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
      # [ERROR][elasticsearch-service] Unable to retrieve version information from Elasticsearch nodes. security_exception
      # https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html
      # Update kibana user info in elasticsearch_container: curl -s -X POST -u elastic:admin1234 -H "Content-Type: application/json" http://localhost:9200/_security/user/<kibana_username>/_password -d "{\"password\":\"<kibana_password>\"}"
      # Example: curl -s -X POST -H "Content-Type: application/json" "http://localhost:9200/_security/user/kibana_system/_password?pretty" -d '{ "password": "ms_admin" }' -u elastic:ms_admin
      # WARNING: If you delete its volume, you need to recreate password and service token below
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=ms_admin
      # In elasticsearch, command: bin/elasticsearch-service-tokens create elastic/kibana [name]
      # WARNING: If you delete volume folder, you have to recreate the token
      - ELASTICSEARCH_SERVICEACCOUNT_TOKEN=AAEAAWVsYXN0aWMva2liYW5hL21zLXJydHMtYXQ6d2V6SGo3RzFSZldsaHA4alVaWmNPdw
      - XPACK_FLEET_AGENTS_ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
    volumes:
      - ./kibana.yml/:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - 5601:5601
    networks:
      - elastic_net
    depends_on:
      - elasticsearch

  #https://www.elastic.co/guide/en/beats/metricbeat/current/running-on-docker.html#_volume_mounted_configuration
  metricbeat:
    container_name: metricbeat_container
    image: docker.elastic.co/beats/metricbeat:8.13.2
    user: root
    hostname: metricbeat
    ports:
      - 5066:5066
    volumes:
      - ./metricbeat.yml/:/usr/share/metricbeat/metricbeat.yml:ro
      # docker module
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # system module
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
    command: [ "--strict.perms=false", "-system.hostfs=/hostfs" ]
    depends_on:
      - elasticsearch
    networks:
      - elastic_net
      - volumes_net

  #https://www.elastic.co/guide/en/beats/heartbeat/current/running-on-docker.html
  heartbeat:
    container_name: heartbeat_container
    image: docker.elastic.co/beats/heartbeat:8.13.2
    user: root
    hostname: heartbeat
    cap_add:
      - NET_RAW
    command: [ "--strict.perms=false" ]
    volumes:
      - ./heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro
    depends_on:
      - elasticsearch
    networks:
      - elastic_net
      - services_net

  #https://www.elastic.co/guide/en/apm/guide/7.17/apm-overview.html#apm-overview
  apm-server:
    image: docker.elastic.co/apm/apm-server:8.13.2
    container_name: apm_server_container
    ports:
      - 8200:8200
    volumes:
      - ./apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana_container:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana_container:5601
        -E apm-server.kibana.protocol=http
        -E strict.perms=false
        -E apm-server.auth.anonymous.enabled=true
    networks:
      - elastic_net
      - services_net
      - volumes_net
